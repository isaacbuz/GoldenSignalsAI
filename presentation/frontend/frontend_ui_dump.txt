// --- App.js ---
// presentation/frontend/src/App.js
// Purpose: Implements the React frontend for GoldenSignalsAI, providing a dashboard for
// viewing trading signals, agent activity, and market data, with options trading-specific features.
import React from 'react';
import { BrowserRouter as Router, Routes, Route, Link, Navigate } from 'react-router-dom';
import './App.css';
import Dashboard from './pages/Dashboard';
import Scanner from './pages/Scanner';
import Arbitrage from './pages/Arbitrage';
import Admin from './pages/Admin';

function App() {
  return (
    <Router>
      <div className="App">
        <nav className="main-nav">
          <ul>
            <li><Link to="/">Dashboard</Link></li>
            <li><Link to="/scanner">Scanner</Link></li>
            <li><Link to="/arbitrage">Arbitrage</Link></li>
            <li><Link to="/admin">Admin</Link></li>
          </ul>
        </nav>
        <Routes>
          <Route path="/" element={<Dashboard />} />
          <Route path="/scanner" element={<Scanner />} />
          <Route path="/arbitrage" element={<Arbitrage />} />
          <Route path="/admin" element={<Admin />} />
          <Route path="*" element={<Navigate to="/" />} />
        </Routes>
      </div>
    </Router>
  );
}
export default App;

// --- App.jsx ---
import React, { useEffect, useState } from 'react';
import { API_URL, WS_URL } from './config';
import TradingDashboard from './components/TradingDashboard';

function App() {
  return <TradingDashboard />;
}
export default App;

// --- main.jsx ---
import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.jsx'

createRoot(document.getElementById('root')).render(
  <StrictMode>
    <App />
  </StrictMode>,
)

// --- config.js ---
// Centralized config for API and WS URLs
export const API_URL = "http://127.0.0.1:8001";
export const WS_URL = API_URL.replace(/^http/, "ws");

// --- index.css (partial) ---
:root {
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;
  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}
body {
  margin: 0;
  display: flex;
  place-items: center;
  min-width: 320px;
  min-height: 100vh;
}
h1 {
  font-size: 3.2em;
  line-height: 1.1;
}
button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}

// --- App.css (partial) ---
#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}
.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}
@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}
.card {
  padding: 2em;
}
.read-the-docs {
  color: #888;

// GoldenSignalsAI - Luxury Fintech Theme
body, #root {
  background: linear-gradient(120deg, #181818 60%, #232323 100%);
  color: #F2E9C9;
  font-family: 'Inter', 'Segoe UI', Arial, sans-serif;
  margin: 0;
}

// --- TradingDashboard.jsx (partial) ---
import React, { useEffect, useState } from 'react';
import { API_URL, WS_URL } from '../config';
import './TradingDashboard.css';
import EChartsOptionTradeChart from './EChartsOptionTradeChart';
import WatchlistSidebar from './WatchlistSidebar';
import AlertsFeed from './AlertsFeed';
import ChartOverlayControls from './ChartOverlayControls';
import PerformanceWidgets from './PerformanceWidgets';
import BacktestPanel from './BacktestPanel';
import TradeJournal from './TradeJournal';

function TradingDashboard() {
  // ...state and logic...
  return (
    <div className="dashboard-root">
      <header className="dashboard-header"> ... </header>
      <div className="responsive-main">
        <main className="dashboard-main">
          <div className="dashboard-content-row responsive-row">
            <div className="responsive-sidebar">
              <WatchlistSidebar ... />
            </div>
            <div className="dashboard-main-content">
              <section className="dashboard-market"> ... </section>
              <section className="dashboard-analytics"> ...
                <div className="analytics-charts">
                  <div className="analytics-chart chart-section">
                    <EChartsOptionTradeChart ... />
                  </div>
                </div>
              </section>
            </div>
          </div>
        </main>
      </div>
    </div>
  );
}
export default TradingDashboard;

// --- EChartsOptionTradeChart.jsx (partial) ---
import React from 'react';
import PropTypes from 'prop-types';
import ReactECharts from 'echarts-for-react';
import ChartSkeleton from './ChartSkeleton';

export default function EChartsOptionTradeChart({ ohlcv, signals, loading, overlays = {} }) {
  if (loading) return <ChartSkeleton />;
  if (!ohlcv || ohlcv.length === 0) return <div style={{ color: '#FFD700', textAlign: 'center', padding: '2rem' }}>No data available.</div>;
  // Legend for OHLCV format
  // ...legendStyle, legendText...
  // Pagination state, CSV export, Table with tooltips, etc.
  // ...
  return (
    <div>
      {/* Legend */}
      <div style={legendStyle}>{legendText}</div>
      {/* Table with tooltips, pagination, export button */}
      {ohlcvTable}
      {/* Chart rendering (ReactECharts) */}
      <ReactECharts ... />
    </div>
  );
}

// --- WatchlistSidebar.jsx (partial) ---
import React from 'react';
import PropTypes from 'prop-types';
import './WatchlistSidebar.css';

export default function WatchlistSidebar({ watchlist, selected, onSelect }) {
  return (
    <aside className="watchlist-sidebar">
      <h3>Watchlist</h3>
      <ul>
        {/* ...list of symbols, price, sparkline... */}
      </ul>
    </aside>
  );
}

// --- AlertsFeed.jsx (partial) ---
import React from 'react';
import PropTypes from 'prop-types';
import './AlertsFeed.css';

export default function AlertsFeed({ alerts }) {
  return (
    <aside className="alerts-feed">
      <h3>Alerts & Notifications</h3>
      <ul>
        {/* ...list of alerts... */}
      </ul>
    </aside>
  );
}

// --- PerformanceWidgets.jsx (partial) ---
import React from 'react';
import PropTypes from 'prop-types';
import './PerformanceWidgets.css';

export default function PerformanceWidgets({ metrics }) {
  return (
    <div className="performance-widgets">
      {/* ...metrics widgets... */}
    </div>
  );
}

// --- BacktestPanel.jsx (partial) ---
import React, { useState } from 'react';
import PropTypes from 'prop-types';
import './BacktestPanel.css';

export default function BacktestPanel({ onRunBacktest, initialParams, result }) {
  // ...state and logic...
  return (
    <div className="backtest-panel">
      {/* ...backtest form and results... */}
    </div>
  );
}

// --- TradeJournal.jsx (partial) ---
import React, { useState } from 'react';
import './TradeJournal.css';

export default function TradeJournal() {
  // ...state and logic...
  return (
    <div className="trade-journal-panel">
      {/* ...journal entries and notes... */}
    </div>
  );
}

// --- Dashboard.jsx (partial) ---
import React, { useState, useEffect } from 'react';
import { Line } from 'react-chartjs-2';

function Dashboard() {
  // ...state and logic...
  return (
    <div className="dashboard-page"> ... </div>
  );
}
export default Dashboard;

// --- Scanner.jsx ---
import React from 'react';
function Scanner() {
  return (
    <div className="scanner-page">
      <h1>Market Scanner</h1>
      <p>Find the top 5 options trades with the highest probability of profit based on current market analysis.</p>
      {/* Scanner logic and results table will go here */}
    </div>
  );
}
export default Scanner;

// --- Arbitrage.jsx ---
import React from 'react';
function Arbitrage() {
  return (
    <div className="arbitrage-page">
      <h1>Arbitrage Opportunities</h1>
      <p>Scan for price differences and risk-free profit opportunities across markets.</p>
      {/* Table of arbitrage opportunities will go here */}
    </div>
  );
}
export default Arbitrage;

// --- Admin.jsx ---
import React from 'react';
function Admin() {
  return (
    <div className="admin-page">
      <h1>Admin Dashboard</h1>
      <p>Manage users, monitor system health, and control agents.</p>
      <section className="admin-agents">
        <h2>Agent Status</h2>
        <div className="agent-status-list">
          <div className="agent-status-card">Arbitrage Agent: <span className="agent-status agent-status-ok">Healthy</span></div>
          <div className="agent-status-card">Trading Agent: <span className="agent-status agent-status-warning">Warning</span></div>
        </div>
      </section>
      {/* User management and system controls will go here */}
    </div>
  );
}
export default Admin;
