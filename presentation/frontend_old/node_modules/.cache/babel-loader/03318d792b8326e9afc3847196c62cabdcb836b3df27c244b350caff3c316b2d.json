{"ast":null,"code":"import _objectSpread from\"/Users/isaacbuz/Documents/Projects/GoldenSignalsAI/presentation/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Arbitrage.js\n// Purpose: Displays arbitrage opportunities and allows users to execute trades. Fetches arbitrage data from the backend and manages trade execution state. Designed for user-facing arbitrage discovery and action within GoldenSignalsAI.\nimport React,{useEffect,useState}from'react';import'./Arbitrage.css';import API_URL from'./config';// Arbitrage component: displays arbitrage opportunities and allows users to execute trades\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Arbitrage(){// State for storing arbitrage opportunities\nconst[opportunities,setOpportunities]=useState([]);// State for tracking loading state\nconst[loading,setLoading]=useState(true);// State for tracking trade execution status\nconst[tradeStatus,setTradeStatus]=useState(\"\");const[symbol,setSymbol]=useState('AAPL');// Optionally, add error state for invalid ticker\nconst[tickerError,setTickerError]=useState(\"\");const[executing,setExecuting]=useState(false);const[message,setMessage]=useState('');// Fetch arbitrage opportunities from backend\nconst fetchOpportunities=async()=>{if(tickerError)return;try{const res=await fetch(\"\".concat(API_URL,\"/arbitrage/opportunities\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({symbol,min_spread:0.01})});if(!res.ok){let text=await res.text();try{text=JSON.parse(text);}catch(_unused){}setMessage('Error: '+(text.detail||text||res.status));setOpportunities([]);return;}const data=await res.json();setOpportunities(data);setMessage('');}catch(err){setMessage('Error fetching opportunities: '+(err.message||err));setOpportunities([]);}};// Execute arbitrage trade for all opportunities\nconst executeArbitrage=async()=>{if(tickerError)return;setExecuting(true);setMessage('');try{const res=await fetch(\"\".concat(API_URL,\"/arbitrage/execute\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({symbol,min_spread:0.01})});if(!res.ok){let text=await res.text();try{text=JSON.parse(text);}catch(_unused2){}setMessage('Error: '+(text.detail||text||res.status));setExecuting(false);return;}const data=await res.json();setMessage(\"Executed \".concat(data.executed,\" out of \").concat(data.total,\" opportunities.\"));}catch(err){setMessage('Error executing arbitrage: '+(err.message||err));}setExecuting(false);fetchOpportunities();};// Fetch arbitrage opportunities on mount and every 15 seconds\nuseEffect(()=>{fetchOpportunities();const interval=setInterval(fetchOpportunities,15000);return()=>clearInterval(interval);},[symbol]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"arbitrage-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"AI Arbitrage Opportunities\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"arbitrage-controls\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"ticker-input\",children:\"Symbol: \"}),/*#__PURE__*/_jsx(\"input\",{id:\"ticker-input\",type:\"text\",value:symbol,onChange:async e=>{const newSymbol=e.target.value.toUpperCase();setSymbol(newSymbol);setTickerError(\"\");if(newSymbol&&newSymbol.length>=1){try{const jwt=localStorage.getItem('jwt_token');const res=await fetch(\"\".concat(API_URL,\"/api/tickers/validate\"),{method:'POST',headers:_objectSpread({'Content-Type':'application/json'},jwt?{Authorization:\"Bearer \".concat(jwt)}:{}),body:JSON.stringify({symbol:newSymbol})});const data=await res.json();if(!data.valid){setTickerError('Invalid ticker symbol');}else{setTickerError(\"\");}}catch(err){setTickerError('Validation failed');}}else{setTickerError(\"\");}},placeholder:\"Enter stock ticker (e.g. AAPL)\",style:{width:120,marginRight:8,padding:4,borderRadius:4,border:'1px solid #333'}}),tickerError&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red',marginLeft:8},children:tickerError}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchOpportunities,disabled:!!tickerError,children:\"Refresh\"}),/*#__PURE__*/_jsx(\"button\",{onClick:executeArbitrage,disabled:executing||!!tickerError,className:\"execute-btn\",children:executing?'Executing...':'Execute All'})]}),message&&/*#__PURE__*/_jsx(\"div\",{className:\"arbitrage-message\",style:{color:message.startsWith('Error')?'red':undefined},children:message}),/*#__PURE__*/_jsxs(\"table\",{className:\"arbitrage-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Symbol\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Buy Venue\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Sell Venue\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Buy Price\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Sell Price\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Spread\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:opportunities.length===0?/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"7\",children:\"No opportunities found.\"})}):opportunities.map((opp,idx)=>/*#__PURE__*/_jsxs(\"tr\",{className:opp.spread>0.1?'highlight-row':'',children:[/*#__PURE__*/_jsx(\"td\",{children:opp.symbol}),/*#__PURE__*/_jsx(\"td\",{children:opp.buy_venue}),/*#__PURE__*/_jsx(\"td\",{children:opp.sell_venue}),/*#__PURE__*/_jsxs(\"td\",{children:[\"$\",opp.buy_price.toFixed(2)]}),/*#__PURE__*/_jsxs(\"td\",{children:[\"$\",opp.sell_price.toFixed(2)]}),/*#__PURE__*/_jsxs(\"td\",{className:\"spread-cell\",children:[\"$\",opp.spread.toFixed(2)]}),/*#__PURE__*/_jsx(\"td\",{children:opp.status})]},idx))})]})]})});}export default Arbitrage;","map":{"version":3,"names":["React","useEffect","useState","API_URL","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Arbitrage","opportunities","setOpportunities","loading","setLoading","tradeStatus","setTradeStatus","symbol","setSymbol","tickerError","setTickerError","executing","setExecuting","message","setMessage","fetchOpportunities","res","fetch","concat","method","headers","body","JSON","stringify","min_spread","ok","text","parse","_unused","detail","status","data","json","err","executeArbitrage","_unused2","executed","total","interval","setInterval","clearInterval","children","className","htmlFor","id","type","value","onChange","e","newSymbol","target","toUpperCase","length","jwt","localStorage","getItem","_objectSpread","Authorization","valid","placeholder","style","width","marginRight","padding","borderRadius","border","color","marginLeft","onClick","disabled","startsWith","undefined","colSpan","map","opp","idx","spread","buy_venue","sell_venue","buy_price","toFixed","sell_price"],"sources":["/Users/isaacbuz/Documents/Projects/GoldenSignalsAI/presentation/frontend/src/Arbitrage.js"],"sourcesContent":["// Arbitrage.js\n// Purpose: Displays arbitrage opportunities and allows users to execute trades. Fetches arbitrage data from the backend and manages trade execution state. Designed for user-facing arbitrage discovery and action within GoldenSignalsAI.\n\nimport React, { useEffect, useState } from 'react';\nimport './Arbitrage.css';\nimport API_URL from './config';\n\n// Arbitrage component: displays arbitrage opportunities and allows users to execute trades\nfunction Arbitrage() {\n  // State for storing arbitrage opportunities\n  const [opportunities, setOpportunities] = useState([]);\n  // State for tracking loading state\n  const [loading, setLoading] = useState(true);\n  // State for tracking trade execution status\n  const [tradeStatus, setTradeStatus] = useState(\"\");\n  const [symbol, setSymbol] = useState('AAPL');\n  // Optionally, add error state for invalid ticker\n  const [tickerError, setTickerError] = useState(\"\");\n  const [executing, setExecuting] = useState(false);\n  const [message, setMessage] = useState('');\n\n  // Fetch arbitrage opportunities from backend\n  const fetchOpportunities = async () => {\n    if (tickerError) return;\n    try {\n      const res = await fetch(`${API_URL}/arbitrage/opportunities`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ symbol, min_spread: 0.01 })\n      });\n      if (!res.ok) {\n        let text = await res.text();\n        try { text = JSON.parse(text); } catch {}\n        setMessage('Error: ' + (text.detail || text || res.status));\n        setOpportunities([]);\n        return;\n      }\n      const data = await res.json();\n      setOpportunities(data);\n      setMessage('');\n    } catch (err) {\n      setMessage('Error fetching opportunities: ' + (err.message || err));\n      setOpportunities([]);\n    }\n  };\n\n  // Execute arbitrage trade for all opportunities\n  const executeArbitrage = async () => {\n    if (tickerError) return;\n    setExecuting(true);\n    setMessage('');\n    try {\n      const res = await fetch(`${API_URL}/arbitrage/execute`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ symbol, min_spread: 0.01 })\n      });\n      if (!res.ok) {\n        let text = await res.text();\n        try { text = JSON.parse(text); } catch {}\n        setMessage('Error: ' + (text.detail || text || res.status));\n        setExecuting(false);\n        return;\n      }\n      const data = await res.json();\n      setMessage(`Executed ${data.executed} out of ${data.total} opportunities.`);\n    } catch (err) {\n      setMessage('Error executing arbitrage: ' + (err.message || err));\n    }\n    setExecuting(false);\n    fetchOpportunities();\n  };\n\n  // Fetch arbitrage opportunities on mount and every 15 seconds\n  useEffect(() => {\n    fetchOpportunities();\n    const interval = setInterval(fetchOpportunities, 15000);\n    return () => clearInterval(interval);\n  }, [symbol]);\n\n  return (\n    <>\n      <div className=\"arbitrage-container\">\n        <h2>AI Arbitrage Opportunities</h2>\n        <div className=\"arbitrage-controls\">\n          {/* Material UI TextField for ticker input */}\n          <label htmlFor=\"ticker-input\">Symbol: </label>\n          <input\n            id=\"ticker-input\"\n            type=\"text\"\n            value={symbol}\n            onChange={async (e) => {\n              const newSymbol = e.target.value.toUpperCase();\n              setSymbol(newSymbol);\n              setTickerError(\"\");\n              if (newSymbol && newSymbol.length >= 1) {\n                try {\n                  const jwt = localStorage.getItem('jwt_token');\n                  const res = await fetch(`${API_URL}/api/tickers/validate`, {\n                    method: 'POST',\n                    headers: {\n                      'Content-Type': 'application/json',\n                      ...(jwt ? { Authorization: `Bearer ${jwt}` } : {})\n                    },\n                    body: JSON.stringify({ symbol: newSymbol })\n                  });\n                  const data = await res.json();\n                  if (!data.valid) {\n                    setTickerError('Invalid ticker symbol');\n                  } else {\n                    setTickerError(\"\");\n                  }\n                } catch (err) {\n                  setTickerError('Validation failed');\n                }\n              } else {\n                setTickerError(\"\");\n              }\n            }}\n            placeholder=\"Enter stock ticker (e.g. AAPL)\"\n            style={{ width: 120, marginRight: 8, padding: 4, borderRadius: 4, border: '1px solid #333' }}\n          />\n          {tickerError && <span style={{ color: 'red', marginLeft: 8 }}>{tickerError}</span>}\n          <button onClick={fetchOpportunities} disabled={!!tickerError}>Refresh</button>\n          <button onClick={executeArbitrage} disabled={executing || !!tickerError} className=\"execute-btn\">\n            {executing ? 'Executing...' : 'Execute All'}\n          </button>\n        </div>\n        {message && <div className=\"arbitrage-message\" style={{color: message.startsWith('Error') ? 'red' : undefined}}>{message}</div>}\n        <table className=\"arbitrage-table\">\n          <thead>\n            <tr>\n              <th>Symbol</th>\n              <th>Buy Venue</th>\n              <th>Sell Venue</th>\n              <th>Buy Price</th>\n              <th>Sell Price</th>\n              <th>Spread</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {opportunities.length === 0 ? (\n              <tr><td colSpan=\"7\">No opportunities found.</td></tr>\n            ) : (\n              opportunities.map((opp, idx) => (\n                <tr key={idx} className={opp.spread > 0.1 ? 'highlight-row' : ''}>\n                  <td>{opp.symbol}</td>\n                  <td>{opp.buy_venue}</td>\n                  <td>{opp.sell_venue}</td>\n                  <td>${opp.buy_price.toFixed(2)}</td>\n                  <td>${opp.sell_price.toFixed(2)}</td>\n                  <td className=\"spread-cell\">${opp.spread.toFixed(2)}</td>\n                  <td>{opp.status}</td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default Arbitrage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}