{"ast":null,"code":"var _jsxFileName = \"/Users/isaacbuz/Documents/Projects/GoldenSignalsAI/presentation/frontend/src/Arbitrage.js\",\n  _s = $RefreshSig$();\n// Arbitrage.js\n// Purpose: Displays arbitrage opportunities and allows users to execute trades. Fetches arbitrage data from the backend and manages trade execution state. Designed for user-facing arbitrage discovery and action within GoldenSignalsAI.\n\nimport React, { useEffect, useState } from 'react';\nimport './Arbitrage.css';\nimport API_URL from './config';\n\n// Arbitrage component: displays arbitrage opportunities and allows users to execute trades\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Arbitrage() {\n  _s();\n  // State for storing arbitrage opportunities\n  const [opportunities, setOpportunities] = useState([]);\n  // State for tracking loading state\n  const [loading, setLoading] = useState(true);\n  // State for tracking trade execution status\n  const [tradeStatus, setTradeStatus] = useState(\"\");\n  const [symbol, setSymbol] = useState('AAPL');\n  // Optionally, add error state for invalid ticker\n  const [tickerError, setTickerError] = useState(\"\");\n  const [executing, setExecuting] = useState(false);\n  const [message, setMessage] = useState('');\n\n  // Fetch arbitrage opportunities from backend\n  const fetchOpportunities = async () => {\n    if (tickerError) return;\n    // Send POST request to backend with symbol and min spread\n    const res = await fetch(`${API_URL}/arbitrage/opportunities`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        symbol,\n        min_spread: 0.01\n      })\n    });\n    // Parse response data and update opportunities state\n    const data = await res.json();\n    setOpportunities(data);\n  };\n\n  // Execute arbitrage trade for all opportunities\n  const executeArbitrage = async () => {\n    if (tickerError) return;\n    // Set executing state to true and clear message\n    setExecuting(true);\n    setMessage('');\n    // Send POST request to backend with symbol and min spread\n    const res = await fetch(`${API_URL}/arbitrage/execute`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        symbol,\n        min_spread: 0.01\n      })\n    });\n    // Parse response data and update message state\n    const data = await res.json();\n    setMessage(`Executed ${data.executed} out of ${data.total} opportunities.`);\n    // Set executing state to false and refetch opportunities\n    setExecuting(false);\n    fetchOpportunities();\n  };\n\n  // Fetch arbitrage opportunities on mount and every 15 seconds\n  useEffect(() => {\n    fetchOpportunities();\n    const interval = setInterval(fetchOpportunities, 15000);\n    return () => clearInterval(interval);\n  }, [symbol]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"arbitrage-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AI Arbitrage Opportunities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"arbitrage-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ticker-input\",\n        children: \"Symbol: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"ticker-input\",\n        type: \"text\",\n        value: symbol,\n        onChange: async e => {\n          const newSymbol = e.target.value.toUpperCase();\n          setSymbol(newSymbol);\n          setTickerError(\"\");\n          if (newSymbol && newSymbol.length >= 1) {\n            try {\n              const jwt = localStorage.getItem('jwt_token');\n              const res = await fetch(`${API_URL}/api/tickers/validate`, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  ...(jwt ? {\n                    Authorization: `Bearer ${jwt}`\n                  } : {})\n                },\n                body: JSON.stringify({\n                  symbol: newSymbol\n                })\n              });\n              const data = await res.json();\n              if (!data.valid) {\n                setTickerError('Invalid ticker symbol');\n              } else {\n                setTickerError(\"\");\n              }\n            } catch (err) {\n              setTickerError('Validation failed');\n            }\n          } else {\n            setTickerError(\"\");\n          }\n        },\n        placeholder: \"Enter stock ticker (e.g. AAPL)\",\n        style: {\n          width: 120,\n          marginRight: 8,\n          padding: 4,\n          borderRadius: 4,\n          border: '1px solid #333'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), tickerError && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'red',\n          marginLeft: 8\n        },\n        children: tickerError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchOpportunities,\n        disabled: !!tickerError,\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: executeArbitrage,\n        disabled: executing || !!tickerError,\n        className: \"execute-btn\",\n        children: executing ? 'Executing...' : 'Execute All'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"arbitrage-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"arbitrage-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Symbol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Buy Venue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sell Venue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Buy Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sell Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Spread\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: opportunities.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"7\",\n            children: \"No opportunities found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this) : opportunities.map((opp, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: opp.spread > 0.1 ? 'highlight-row' : '',\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: opp.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: opp.buy_venue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: opp.sell_venue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", opp.buy_price.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", opp.sell_price.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"spread-cell\",\n            children: [\"$\", opp.spread.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: opp.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Arbitrage, \"igA71SlW0x111yUyWlhw054aXpw=\");\n_c = Arbitrage;\nexport default Arbitrage;\nvar _c;\n$RefreshReg$(_c, \"Arbitrage\");","map":{"version":3,"names":["React","useEffect","useState","API_URL","jsxDEV","_jsxDEV","Arbitrage","_s","opportunities","setOpportunities","loading","setLoading","tradeStatus","setTradeStatus","symbol","setSymbol","tickerError","setTickerError","executing","setExecuting","message","setMessage","fetchOpportunities","res","fetch","method","headers","body","JSON","stringify","min_spread","data","json","executeArbitrage","executed","total","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","newSymbol","target","toUpperCase","length","jwt","localStorage","getItem","Authorization","valid","err","placeholder","style","width","marginRight","padding","borderRadius","border","color","marginLeft","onClick","disabled","colSpan","map","opp","idx","spread","buy_venue","sell_venue","buy_price","toFixed","sell_price","status","_c","$RefreshReg$"],"sources":["/Users/isaacbuz/Documents/Projects/GoldenSignalsAI/presentation/frontend/src/Arbitrage.js"],"sourcesContent":["// Arbitrage.js\n// Purpose: Displays arbitrage opportunities and allows users to execute trades. Fetches arbitrage data from the backend and manages trade execution state. Designed for user-facing arbitrage discovery and action within GoldenSignalsAI.\n\nimport React, { useEffect, useState } from 'react';\nimport './Arbitrage.css';\nimport API_URL from './config';\n\n// Arbitrage component: displays arbitrage opportunities and allows users to execute trades\nfunction Arbitrage() {\n  // State for storing arbitrage opportunities\n  const [opportunities, setOpportunities] = useState([]);\n  // State for tracking loading state\n  const [loading, setLoading] = useState(true);\n  // State for tracking trade execution status\n  const [tradeStatus, setTradeStatus] = useState(\"\");\n  const [symbol, setSymbol] = useState('AAPL');\n  // Optionally, add error state for invalid ticker\n  const [tickerError, setTickerError] = useState(\"\");\n  const [executing, setExecuting] = useState(false);\n  const [message, setMessage] = useState('');\n\n  // Fetch arbitrage opportunities from backend\n  const fetchOpportunities = async () => {\n    if (tickerError) return;\n    // Send POST request to backend with symbol and min spread\n    const res = await fetch(`${API_URL}/arbitrage/opportunities`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ symbol, min_spread: 0.01 })\n    });\n    // Parse response data and update opportunities state\n    const data = await res.json();\n    setOpportunities(data);\n  };\n\n  // Execute arbitrage trade for all opportunities\n  const executeArbitrage = async () => {\n    if (tickerError) return;\n    // Set executing state to true and clear message\n    setExecuting(true);\n    setMessage('');\n    // Send POST request to backend with symbol and min spread\n    const res = await fetch(`${API_URL}/arbitrage/execute`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ symbol, min_spread: 0.01 })\n    });\n    // Parse response data and update message state\n    const data = await res.json();\n    setMessage(`Executed ${data.executed} out of ${data.total} opportunities.`);\n    // Set executing state to false and refetch opportunities\n    setExecuting(false);\n    fetchOpportunities();\n  };\n\n  // Fetch arbitrage opportunities on mount and every 15 seconds\n  useEffect(() => {\n    fetchOpportunities();\n    const interval = setInterval(fetchOpportunities, 15000);\n    return () => clearInterval(interval);\n  }, [symbol]);\n\n  return (\n    <div className=\"arbitrage-container\">\n      <h2>AI Arbitrage Opportunities</h2>\n      <div className=\"arbitrage-controls\">\n        {/* Material UI TextField for ticker input */}\n        <label htmlFor=\"ticker-input\">Symbol: </label>\n        <input\n          id=\"ticker-input\"\n          type=\"text\"\n          value={symbol}\n          onChange={async (e) => {\n            const newSymbol = e.target.value.toUpperCase();\n            setSymbol(newSymbol);\n            setTickerError(\"\");\n            if (newSymbol && newSymbol.length >= 1) {\n              try {\n                const jwt = localStorage.getItem('jwt_token');\n                const res = await fetch(`${API_URL}/api/tickers/validate`, {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json',\n                    ...(jwt ? { Authorization: `Bearer ${jwt}` } : {})\n                  },\n                  body: JSON.stringify({ symbol: newSymbol })\n                });\n                const data = await res.json();\n                if (!data.valid) {\n                  setTickerError('Invalid ticker symbol');\n                } else {\n                  setTickerError(\"\");\n                }\n              } catch (err) {\n                setTickerError('Validation failed');\n              }\n            } else {\n              setTickerError(\"\");\n            }\n          }}\n          placeholder=\"Enter stock ticker (e.g. AAPL)\"\n          style={{ width: 120, marginRight: 8, padding: 4, borderRadius: 4, border: '1px solid #333' }}\n        />\n        {tickerError && <span style={{ color: 'red', marginLeft: 8 }}>{tickerError}</span>}\n        <button onClick={fetchOpportunities} disabled={!!tickerError}>Refresh</button>\n        <button onClick={executeArbitrage} disabled={executing || !!tickerError} className=\"execute-btn\">\n          {executing ? 'Executing...' : 'Execute All'}\n        </button>\n      </div>\n      {message && <div className=\"arbitrage-message\">{message}</div>}\n      <table className=\"arbitrage-table\">\n        <thead>\n          <tr>\n            <th>Symbol</th>\n            <th>Buy Venue</th>\n            <th>Sell Venue</th>\n            <th>Buy Price</th>\n            <th>Sell Price</th>\n            <th>Spread</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {opportunities.length === 0 ? (\n            <tr><td colSpan=\"7\">No opportunities found.</td></tr>\n          ) : (\n            opportunities.map((opp, idx) => (\n              <tr key={idx} className={opp.spread > 0.1 ? 'highlight-row' : ''}>\n                <td>{opp.symbol}</td>\n                <td>{opp.buy_venue}</td>\n                <td>{opp.sell_venue}</td>\n                <td>${opp.buy_price.toFixed(2)}</td>\n                <td>${opp.sell_price.toFixed(2)}</td>\n                <td className=\"spread-cell\">${opp.spread.toFixed(2)}</td>\n                <td>{opp.status}</td>\n              </tr>\n            ))\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Arbitrage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}