{"ast":null,"code":"// AdminQueueStatus.js\n// Purpose: Displays the status of the background task queue for GoldenSignalsAI administrators. Fetches and presents queue depth and active worker count by polling the backend every 5 seconds. Designed for real-time monitoring of system throughput and worker health.\nimport React,{useEffect,useState}from\"react\";import\"./AdminPanel.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AdminQueueStatus(){// State to store queue status from backend\nconst[queue,setQueue]=useState(null);// Poll queue status every 5 seconds for real-time updates\nuseEffect(()=>{fetch(\"/api/admin/queue\").then(res=>res.json()).then(setQueue);const interval=setInterval(()=>{fetch(\"/api/admin/queue\").then(res=>res.json()).then(setQueue);},5000);// update every 5 seconds\n// Clean up interval on component unmount\nreturn()=>clearInterval(interval);},[]);// If no queue data yet, show loading state\nif(!queue)return/*#__PURE__*/_jsx(\"p\",{children:\"Loading queue status...\"});// Render queue depth and active worker count\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"queue-status\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Task Queue Status\"}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Queue Depth: \",/*#__PURE__*/_jsx(\"b\",{children:queue.depth})]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Active Workers: \",/*#__PURE__*/_jsx(\"b\",{children:queue.active_workers})]}),/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Active Workers\"}),/*#__PURE__*/_jsx(\"td\",{children:queue.active})]})})})]});}export default AdminQueueStatus;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","AdminQueueStatus","queue","setQueue","fetch","then","res","json","interval","setInterval","clearInterval","children","className","depth","active_workers","active"],"sources":["/Users/isaacbuz/Documents/Projects/GoldenSignalsAI/presentation/frontend/src/AdminQueueStatus.js"],"sourcesContent":["// AdminQueueStatus.js\n// Purpose: Displays the status of the background task queue for GoldenSignalsAI administrators. Fetches and presents queue depth and active worker count by polling the backend every 5 seconds. Designed for real-time monitoring of system throughput and worker health.\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./AdminPanel.css\";\n\nfunction AdminQueueStatus() {\n  // State to store queue status from backend\n  const [queue, setQueue] = useState(null);\n\n  // Poll queue status every 5 seconds for real-time updates\n  useEffect(() => {\n    fetch(\"/api/admin/queue\")\n      .then((res) => res.json())\n      .then(setQueue);\n    const interval = setInterval(() => {\n      fetch(\"/api/admin/queue\")\n        .then((res) => res.json())\n        .then(setQueue);\n    }, 5000); // update every 5 seconds\n\n    // Clean up interval on component unmount\n    return () => clearInterval(interval);\n  }, []);\n\n  // If no queue data yet, show loading state\n  if (!queue) return <p>Loading queue status...</p>;\n\n  // Render queue depth and active worker count\n  return (\n    <div className=\"queue-status\">\n      <h4>Task Queue Status</h4>\n      <div>Queue Depth: <b>{queue.depth}</b></div>\n      <div>Active Workers: <b>{queue.active_workers}</b></div>\n      <table>\n        <tbody>\n          <tr>\n            <td>Active Workers</td>\n            <td>{queue.active}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default AdminQueueStatus;\n"],"mappings":"AAAA;AACA;AAEA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,gBAAgBA,CAAA,CAAG,CAC1B;AACA,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CAExC;AACAD,SAAS,CAAC,IAAM,CACdS,KAAK,CAAC,kBAAkB,CAAC,CACtBC,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAACF,QAAQ,CAAC,CACjB,KAAM,CAAAK,QAAQ,CAAGC,WAAW,CAAC,IAAM,CACjCL,KAAK,CAAC,kBAAkB,CAAC,CACtBC,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAACF,QAAQ,CAAC,CACnB,CAAC,CAAE,IAAI,CAAC,CAAE;AAEV;AACA,MAAO,IAAMO,aAAa,CAACF,QAAQ,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,GAAI,CAACN,KAAK,CAAE,mBAAOJ,IAAA,MAAAa,QAAA,CAAG,yBAAuB,CAAG,CAAC,CAEjD;AACA,mBACEX,KAAA,QAAKY,SAAS,CAAC,cAAc,CAAAD,QAAA,eAC3Bb,IAAA,OAAAa,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAC1BX,KAAA,QAAAW,QAAA,EAAK,eAAa,cAAAb,IAAA,MAAAa,QAAA,CAAIT,KAAK,CAACW,KAAK,CAAI,CAAC,EAAK,CAAC,cAC5Cb,KAAA,QAAAW,QAAA,EAAK,kBAAgB,cAAAb,IAAA,MAAAa,QAAA,CAAIT,KAAK,CAACY,cAAc,CAAI,CAAC,EAAK,CAAC,cACxDhB,IAAA,UAAAa,QAAA,cACEb,IAAA,UAAAa,QAAA,cACEX,KAAA,OAAAW,QAAA,eACEb,IAAA,OAAAa,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBb,IAAA,OAAAa,QAAA,CAAKT,KAAK,CAACa,MAAM,CAAK,CAAC,EACrB,CAAC,CACA,CAAC,CACH,CAAC,EACL,CAAC,CAEV,CAEA,cAAe,CAAAd,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}