{"ast":null,"code":"var _jsxFileName = \"/Users/isaacbuz/Documents/Projects/GoldenSignalsAI/presentation/frontend/src/Arbitrage.js\",\n  _s = $RefreshSig$();\n// Arbitrage.js\n// Purpose: Displays arbitrage opportunities and allows users to execute trades. Fetches arbitrage data from the backend and manages trade execution state. Designed for user-facing arbitrage discovery and action within GoldenSignalsAI.\n\nimport React, { useEffect, useState } from 'react';\nimport './Arbitrage.css';\nimport API_URL from './config';\n\n// Arbitrage component: displays arbitrage opportunities and allows users to execute trades\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Arbitrage() {\n  _s();\n  // State for storing arbitrage opportunities\n  const [opportunities, setOpportunities] = useState([]);\n  // State for tracking loading state\n  const [loading, setLoading] = useState(true);\n  // State for tracking trade execution status\n  const [tradeStatus, setTradeStatus] = useState(\"\");\n  const [symbol, setSymbol] = useState('AAPL');\n  // Optionally, add error state for invalid ticker\n  const [tickerError, setTickerError] = useState(\"\");\n  const [executing, setExecuting] = useState(false);\n  const [message, setMessage] = useState('');\n\n  // Fetch arbitrage opportunities from backend\n  const fetchOpportunities = async () => {\n    if (tickerError) return;\n    try {\n      const res = await fetch(`${API_URL}/arbitrage/opportunities`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          symbol,\n          min_spread: 0.01\n        })\n      });\n      if (!res.ok) {\n        let text = await res.text();\n        try {\n          text = JSON.parse(text);\n        } catch {}\n        setMessage('Error: ' + (text.detail || text || res.status));\n        setOpportunities([]);\n        return;\n      }\n      const data = await res.json();\n      setOpportunities(data);\n      setMessage('');\n    } catch (err) {\n      setMessage('Error fetching opportunities: ' + (err.message || err));\n      setOpportunities([]);\n    }\n  };\n\n  // Execute arbitrage trade for all opportunities\n  const executeArbitrage = async () => {\n    if (tickerError) return;\n    setExecuting(true);\n    setMessage('');\n    try {\n      const res = await fetch(`${API_URL}/arbitrage/execute`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          symbol,\n          min_spread: 0.01\n        })\n      });\n      if (!res.ok) {\n        let text = await res.text();\n        try {\n          text = JSON.parse(text);\n        } catch {}\n        setMessage('Error: ' + (text.detail || text || res.status));\n        setExecuting(false);\n        return;\n      }\n      const data = await res.json();\n      setMessage(`Executed ${data.executed} out of ${data.total} opportunities.`);\n    } catch (err) {\n      setMessage('Error executing arbitrage: ' + (err.message || err));\n    }\n    setExecuting(false);\n    fetchOpportunities();\n  };\n\n  // Fetch arbitrage opportunities on mount and every 15 seconds\n  useEffect(() => {\n    fetchOpportunities();\n    const interval = setInterval(fetchOpportunities, 15000);\n    return () => clearInterval(interval);\n  }, [symbol]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"arbitrage-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"AI Arbitrage Opportunities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arbitrage-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ticker-input\",\n          children: \"Symbol: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"ticker-input\",\n          type: \"text\",\n          value: symbol,\n          onChange: async e => {\n            const newSymbol = e.target.value.toUpperCase();\n            setSymbol(newSymbol);\n            setTickerError(\"\");\n            if (newSymbol && newSymbol.length >= 1) {\n              try {\n                const jwt = localStorage.getItem('jwt_token');\n                const res = await fetch(`${API_URL}/api/tickers/validate`, {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json',\n                    ...(jwt ? {\n                      Authorization: `Bearer ${jwt}`\n                    } : {})\n                  },\n                  body: JSON.stringify({\n                    symbol: newSymbol\n                  })\n                });\n                const data = await res.json();\n                if (!data.valid) {\n                  setTickerError('Invalid ticker symbol');\n                } else {\n                  setTickerError(\"\");\n                }\n              } catch (err) {\n                setTickerError('Validation failed');\n              }\n            } else {\n              setTickerError(\"\");\n            }\n          },\n          placeholder: \"Enter stock ticker (e.g. AAPL)\",\n          style: {\n            width: 120,\n            marginRight: 8,\n            padding: 4,\n            borderRadius: 4,\n            border: '1px solid #333'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), tickerError && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red',\n            marginLeft: 8\n          },\n          children: tickerError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchOpportunities,\n          disabled: !!tickerError,\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: executeArbitrage,\n          disabled: executing || !!tickerError,\n          className: \"execute-btn\",\n          children: executing ? 'Executing...' : 'Execute All'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arbitrage-message\",\n        style: {\n          color: message.startsWith('Error') ? 'red' : undefined\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"arbitrage-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Symbol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Buy Venue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sell Venue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Buy Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sell Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Spread\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: opportunities.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"7\",\n              children: \"No opportunities found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this) : opportunities.map((opp, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: opp.spread > 0.1 ? 'highlight-row' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: opp.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: opp.buy_venue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: opp.sell_venue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", opp.buy_price.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", opp.sell_price.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"spread-cell\",\n              children: [\"$\", opp.spread.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: opp.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Arbitrage, \"igA71SlW0x111yUyWlhw054aXpw=\");\n_c = Arbitrage;\nexport default Arbitrage;\nvar _c;\n$RefreshReg$(_c, \"Arbitrage\");","map":{"version":3,"names":["React","useEffect","useState","API_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","Arbitrage","_s","opportunities","setOpportunities","loading","setLoading","tradeStatus","setTradeStatus","symbol","setSymbol","tickerError","setTickerError","executing","setExecuting","message","setMessage","fetchOpportunities","res","fetch","method","headers","body","JSON","stringify","min_spread","ok","text","parse","detail","status","data","json","err","executeArbitrage","executed","total","interval","setInterval","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","newSymbol","target","toUpperCase","length","jwt","localStorage","getItem","Authorization","valid","placeholder","style","width","marginRight","padding","borderRadius","border","color","marginLeft","onClick","disabled","startsWith","undefined","colSpan","map","opp","idx","spread","buy_venue","sell_venue","buy_price","toFixed","sell_price","_c","$RefreshReg$"],"sources":["/Users/isaacbuz/Documents/Projects/GoldenSignalsAI/presentation/frontend/src/Arbitrage.js"],"sourcesContent":["// Arbitrage.js\n// Purpose: Displays arbitrage opportunities and allows users to execute trades. Fetches arbitrage data from the backend and manages trade execution state. Designed for user-facing arbitrage discovery and action within GoldenSignalsAI.\n\nimport React, { useEffect, useState } from 'react';\nimport './Arbitrage.css';\nimport API_URL from './config';\n\n// Arbitrage component: displays arbitrage opportunities and allows users to execute trades\nfunction Arbitrage() {\n  // State for storing arbitrage opportunities\n  const [opportunities, setOpportunities] = useState([]);\n  // State for tracking loading state\n  const [loading, setLoading] = useState(true);\n  // State for tracking trade execution status\n  const [tradeStatus, setTradeStatus] = useState(\"\");\n  const [symbol, setSymbol] = useState('AAPL');\n  // Optionally, add error state for invalid ticker\n  const [tickerError, setTickerError] = useState(\"\");\n  const [executing, setExecuting] = useState(false);\n  const [message, setMessage] = useState('');\n\n  // Fetch arbitrage opportunities from backend\n  const fetchOpportunities = async () => {\n    if (tickerError) return;\n    try {\n      const res = await fetch(`${API_URL}/arbitrage/opportunities`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ symbol, min_spread: 0.01 })\n      });\n      if (!res.ok) {\n        let text = await res.text();\n        try { text = JSON.parse(text); } catch {}\n        setMessage('Error: ' + (text.detail || text || res.status));\n        setOpportunities([]);\n        return;\n      }\n      const data = await res.json();\n      setOpportunities(data);\n      setMessage('');\n    } catch (err) {\n      setMessage('Error fetching opportunities: ' + (err.message || err));\n      setOpportunities([]);\n    }\n  };\n\n  // Execute arbitrage trade for all opportunities\n  const executeArbitrage = async () => {\n    if (tickerError) return;\n    setExecuting(true);\n    setMessage('');\n    try {\n      const res = await fetch(`${API_URL}/arbitrage/execute`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ symbol, min_spread: 0.01 })\n      });\n      if (!res.ok) {\n        let text = await res.text();\n        try { text = JSON.parse(text); } catch {}\n        setMessage('Error: ' + (text.detail || text || res.status));\n        setExecuting(false);\n        return;\n      }\n      const data = await res.json();\n      setMessage(`Executed ${data.executed} out of ${data.total} opportunities.`);\n    } catch (err) {\n      setMessage('Error executing arbitrage: ' + (err.message || err));\n    }\n    setExecuting(false);\n    fetchOpportunities();\n  };\n\n  // Fetch arbitrage opportunities on mount and every 15 seconds\n  useEffect(() => {\n    fetchOpportunities();\n    const interval = setInterval(fetchOpportunities, 15000);\n    return () => clearInterval(interval);\n  }, [symbol]);\n\n  return (\n    <>\n      <div className=\"arbitrage-container\">\n        <h2>AI Arbitrage Opportunities</h2>\n        <div className=\"arbitrage-controls\">\n          {/* Material UI TextField for ticker input */}\n          <label htmlFor=\"ticker-input\">Symbol: </label>\n          <input\n            id=\"ticker-input\"\n            type=\"text\"\n            value={symbol}\n            onChange={async (e) => {\n              const newSymbol = e.target.value.toUpperCase();\n              setSymbol(newSymbol);\n              setTickerError(\"\");\n              if (newSymbol && newSymbol.length >= 1) {\n                try {\n                  const jwt = localStorage.getItem('jwt_token');\n                  const res = await fetch(`${API_URL}/api/tickers/validate`, {\n                    method: 'POST',\n                    headers: {\n                      'Content-Type': 'application/json',\n                      ...(jwt ? { Authorization: `Bearer ${jwt}` } : {})\n                    },\n                    body: JSON.stringify({ symbol: newSymbol })\n                  });\n                  const data = await res.json();\n                  if (!data.valid) {\n                    setTickerError('Invalid ticker symbol');\n                  } else {\n                    setTickerError(\"\");\n                  }\n                } catch (err) {\n                  setTickerError('Validation failed');\n                }\n              } else {\n                setTickerError(\"\");\n              }\n            }}\n            placeholder=\"Enter stock ticker (e.g. AAPL)\"\n            style={{ width: 120, marginRight: 8, padding: 4, borderRadius: 4, border: '1px solid #333' }}\n          />\n          {tickerError && <span style={{ color: 'red', marginLeft: 8 }}>{tickerError}</span>}\n          <button onClick={fetchOpportunities} disabled={!!tickerError}>Refresh</button>\n          <button onClick={executeArbitrage} disabled={executing || !!tickerError} className=\"execute-btn\">\n            {executing ? 'Executing...' : 'Execute All'}\n          </button>\n        </div>\n        {message && <div className=\"arbitrage-message\" style={{color: message.startsWith('Error') ? 'red' : undefined}}>{message}</div>}\n        <table className=\"arbitrage-table\">\n          <thead>\n            <tr>\n              <th>Symbol</th>\n              <th>Buy Venue</th>\n              <th>Sell Venue</th>\n              <th>Buy Price</th>\n              <th>Sell Price</th>\n              <th>Spread</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {opportunities.length === 0 ? (\n              <tr><td colSpan=\"7\">No opportunities found.</td></tr>\n            ) : (\n              opportunities.map((opp, idx) => (\n                <tr key={idx} className={opp.spread > 0.1 ? 'highlight-row' : ''}>\n                  <td>{opp.symbol}</td>\n                  <td>{opp.buy_venue}</td>\n                  <td>{opp.sell_venue}</td>\n                  <td>${opp.buy_price.toFixed(2)}</td>\n                  <td>${opp.sell_price.toFixed(2)}</td>\n                  <td className=\"spread-cell\">${opp.spread.toFixed(2)}</td>\n                  <td>{opp.status}</td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default Arbitrage;\n"],"mappings":";;AAAA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AACxB,OAAOC,OAAO,MAAM,UAAU;;AAE9B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD;EACA,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C;EACA,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,MAAM,CAAC;EAC5C;EACA,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMsB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAIN,WAAW,EAAE;IACjB,IAAI;MACF,MAAMO,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGvB,OAAO,0BAA0B,EAAE;QAC5DwB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEf,MAAM;UAAEgB,UAAU,EAAE;QAAK,CAAC;MACnD,CAAC,CAAC;MACF,IAAI,CAACP,GAAG,CAACQ,EAAE,EAAE;QACX,IAAIC,IAAI,GAAG,MAAMT,GAAG,CAACS,IAAI,CAAC,CAAC;QAC3B,IAAI;UAAEA,IAAI,GAAGJ,IAAI,CAACK,KAAK,CAACD,IAAI,CAAC;QAAE,CAAC,CAAC,MAAM,CAAC;QACxCX,UAAU,CAAC,SAAS,IAAIW,IAAI,CAACE,MAAM,IAAIF,IAAI,IAAIT,GAAG,CAACY,MAAM,CAAC,CAAC;QAC3D1B,gBAAgB,CAAC,EAAE,CAAC;QACpB;MACF;MACA,MAAM2B,IAAI,GAAG,MAAMb,GAAG,CAACc,IAAI,CAAC,CAAC;MAC7B5B,gBAAgB,CAAC2B,IAAI,CAAC;MACtBf,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZjB,UAAU,CAAC,gCAAgC,IAAIiB,GAAG,CAAClB,OAAO,IAAIkB,GAAG,CAAC,CAAC;MACnE7B,gBAAgB,CAAC,EAAE,CAAC;IACtB;EACF,CAAC;;EAED;EACA,MAAM8B,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAIvB,WAAW,EAAE;IACjBG,YAAY,CAAC,IAAI,CAAC;IAClBE,UAAU,CAAC,EAAE,CAAC;IACd,IAAI;MACF,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGvB,OAAO,oBAAoB,EAAE;QACtDwB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEf,MAAM;UAAEgB,UAAU,EAAE;QAAK,CAAC;MACnD,CAAC,CAAC;MACF,IAAI,CAACP,GAAG,CAACQ,EAAE,EAAE;QACX,IAAIC,IAAI,GAAG,MAAMT,GAAG,CAACS,IAAI,CAAC,CAAC;QAC3B,IAAI;UAAEA,IAAI,GAAGJ,IAAI,CAACK,KAAK,CAACD,IAAI,CAAC;QAAE,CAAC,CAAC,MAAM,CAAC;QACxCX,UAAU,CAAC,SAAS,IAAIW,IAAI,CAACE,MAAM,IAAIF,IAAI,IAAIT,GAAG,CAACY,MAAM,CAAC,CAAC;QAC3DhB,YAAY,CAAC,KAAK,CAAC;QACnB;MACF;MACA,MAAMiB,IAAI,GAAG,MAAMb,GAAG,CAACc,IAAI,CAAC,CAAC;MAC7BhB,UAAU,CAAC,YAAYe,IAAI,CAACI,QAAQ,WAAWJ,IAAI,CAACK,KAAK,iBAAiB,CAAC;IAC7E,CAAC,CAAC,OAAOH,GAAG,EAAE;MACZjB,UAAU,CAAC,6BAA6B,IAAIiB,GAAG,CAAClB,OAAO,IAAIkB,GAAG,CAAC,CAAC;IAClE;IACAnB,YAAY,CAAC,KAAK,CAAC;IACnBG,kBAAkB,CAAC,CAAC;EACtB,CAAC;;EAED;EACAvB,SAAS,CAAC,MAAM;IACduB,kBAAkB,CAAC,CAAC;IACpB,MAAMoB,QAAQ,GAAGC,WAAW,CAACrB,kBAAkB,EAAE,KAAK,CAAC;IACvD,OAAO,MAAMsB,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAAC5B,MAAM,CAAC,CAAC;EAEZ,oBACEX,OAAA,CAAAE,SAAA;IAAAwC,QAAA,eACE1C,OAAA;MAAK2C,SAAS,EAAC,qBAAqB;MAAAD,QAAA,gBAClC1C,OAAA;QAAA0C,QAAA,EAAI;MAA0B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnC/C,OAAA;QAAK2C,SAAS,EAAC,oBAAoB;QAAAD,QAAA,gBAEjC1C,OAAA;UAAOgD,OAAO,EAAC,cAAc;UAAAN,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9C/C,OAAA;UACEiD,EAAE,EAAC,cAAc;UACjBC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAExC,MAAO;UACdyC,QAAQ,EAAE,MAAOC,CAAC,IAAK;YACrB,MAAMC,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAACK,WAAW,CAAC,CAAC;YAC9C5C,SAAS,CAAC0C,SAAS,CAAC;YACpBxC,cAAc,CAAC,EAAE,CAAC;YAClB,IAAIwC,SAAS,IAAIA,SAAS,CAACG,MAAM,IAAI,CAAC,EAAE;cACtC,IAAI;gBACF,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;gBAC7C,MAAMxC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGvB,OAAO,uBAAuB,EAAE;kBACzDwB,MAAM,EAAE,MAAM;kBACdC,OAAO,EAAE;oBACP,cAAc,EAAE,kBAAkB;oBAClC,IAAImC,GAAG,GAAG;sBAAEG,aAAa,EAAE,UAAUH,GAAG;oBAAG,CAAC,GAAG,CAAC,CAAC;kBACnD,CAAC;kBACDlC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;oBAAEf,MAAM,EAAE2C;kBAAU,CAAC;gBAC5C,CAAC,CAAC;gBACF,MAAMrB,IAAI,GAAG,MAAMb,GAAG,CAACc,IAAI,CAAC,CAAC;gBAC7B,IAAI,CAACD,IAAI,CAAC6B,KAAK,EAAE;kBACfhD,cAAc,CAAC,uBAAuB,CAAC;gBACzC,CAAC,MAAM;kBACLA,cAAc,CAAC,EAAE,CAAC;gBACpB;cACF,CAAC,CAAC,OAAOqB,GAAG,EAAE;gBACZrB,cAAc,CAAC,mBAAmB,CAAC;cACrC;YACF,CAAC,MAAM;cACLA,cAAc,CAAC,EAAE,CAAC;YACpB;UACF,CAAE;UACFiD,WAAW,EAAC,gCAAgC;UAC5CC,KAAK,EAAE;YAAEC,KAAK,EAAE,GAAG;YAAEC,WAAW,EAAE,CAAC;YAAEC,OAAO,EAAE,CAAC;YAAEC,YAAY,EAAE,CAAC;YAAEC,MAAM,EAAE;UAAiB;QAAE;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9F,CAAC,EACDlC,WAAW,iBAAIb,OAAA;UAAMgE,KAAK,EAAE;YAAEM,KAAK,EAAE,KAAK;YAAEC,UAAU,EAAE;UAAE,CAAE;UAAA7B,QAAA,EAAE7B;QAAW;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClF/C,OAAA;UAAQwE,OAAO,EAAErD,kBAAmB;UAACsD,QAAQ,EAAE,CAAC,CAAC5D,WAAY;UAAA6B,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9E/C,OAAA;UAAQwE,OAAO,EAAEpC,gBAAiB;UAACqC,QAAQ,EAAE1D,SAAS,IAAI,CAAC,CAACF,WAAY;UAAC8B,SAAS,EAAC,aAAa;UAAAD,QAAA,EAC7F3B,SAAS,GAAG,cAAc,GAAG;QAAa;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EACL9B,OAAO,iBAAIjB,OAAA;QAAK2C,SAAS,EAAC,mBAAmB;QAACqB,KAAK,EAAE;UAACM,KAAK,EAAErD,OAAO,CAACyD,UAAU,CAAC,OAAO,CAAC,GAAG,KAAK,GAAGC;QAAS,CAAE;QAAAjC,QAAA,EAAEzB;MAAO;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC/H/C,OAAA;QAAO2C,SAAS,EAAC,iBAAiB;QAAAD,QAAA,gBAChC1C,OAAA;UAAA0C,QAAA,eACE1C,OAAA;YAAA0C,QAAA,gBACE1C,OAAA;cAAA0C,QAAA,EAAI;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACf/C,OAAA;cAAA0C,QAAA,EAAI;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClB/C,OAAA;cAAA0C,QAAA,EAAI;YAAU;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnB/C,OAAA;cAAA0C,QAAA,EAAI;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClB/C,OAAA;cAAA0C,QAAA,EAAI;YAAU;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnB/C,OAAA;cAAA0C,QAAA,EAAI;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACf/C,OAAA;cAAA0C,QAAA,EAAI;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACR/C,OAAA;UAAA0C,QAAA,EACGrC,aAAa,CAACoD,MAAM,KAAK,CAAC,gBACzBzD,OAAA;YAAA0C,QAAA,eAAI1C,OAAA;cAAI4E,OAAO,EAAC,GAAG;cAAAlC,QAAA,EAAC;YAAuB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,GAErD1C,aAAa,CAACwE,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACzB/E,OAAA;YAAc2C,SAAS,EAAEmC,GAAG,CAACE,MAAM,GAAG,GAAG,GAAG,eAAe,GAAG,EAAG;YAAAtC,QAAA,gBAC/D1C,OAAA;cAAA0C,QAAA,EAAKoC,GAAG,CAACnE;YAAM;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrB/C,OAAA;cAAA0C,QAAA,EAAKoC,GAAG,CAACG;YAAS;cAAArC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxB/C,OAAA;cAAA0C,QAAA,EAAKoC,GAAG,CAACI;YAAU;cAAAtC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACzB/C,OAAA;cAAA0C,QAAA,GAAI,GAAC,EAACoC,GAAG,CAACK,SAAS,CAACC,OAAO,CAAC,CAAC,CAAC;YAAA;cAAAxC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpC/C,OAAA;cAAA0C,QAAA,GAAI,GAAC,EAACoC,GAAG,CAACO,UAAU,CAACD,OAAO,CAAC,CAAC,CAAC;YAAA;cAAAxC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrC/C,OAAA;cAAI2C,SAAS,EAAC,aAAa;cAAAD,QAAA,GAAC,GAAC,EAACoC,GAAG,CAACE,MAAM,CAACI,OAAO,CAAC,CAAC,CAAC;YAAA;cAAAxC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACzD/C,OAAA;cAAA0C,QAAA,EAAKoC,GAAG,CAAC9C;YAAM;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAPdgC,GAAG;YAAAnC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQR,CACL;QACF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACN,CAAC;AAEP;AAAC3C,EAAA,CA1JQD,SAAS;AAAAmF,EAAA,GAATnF,SAAS;AA4JlB,eAAeA,SAAS;AAAC,IAAAmF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}