{"ast":null,"code":"var _jsxFileName = \"/Users/isaacbuz/Documents/Projects/GoldenSignalsAI/presentation/frontend/src/AdminQueueStatus.js\",\n  _s = $RefreshSig$();\n// AdminQueueStatus.js\n// Purpose: Displays the status of the background task queue for GoldenSignalsAI administrators. Fetches and presents queue depth and active worker count by polling the backend every 5 seconds. Designed for real-time monitoring of system throughput and worker health.\n\nimport React, { useEffect, useState } from 'react';\nimport API_URL from './config';\nimport \"./AdminPanel.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminQueueStatus() {\n  _s();\n  // State to store queue status from backend\n  const [queue, setQueue] = useState(null);\n\n  // Poll queue status every 5 seconds for real-time updates\n  useEffect(() => {\n    fetch(`${API_URL}/api/admin/queue`).then(res => res.json()).then(setQueue);\n    const interval = setInterval(() => {\n      fetch(`${API_URL}/api/admin/queue`).then(res => res.json()).then(setQueue);\n    }, 5000); // update every 5 seconds\n\n    // Clean up interval on component unmount\n    return () => clearInterval(interval);\n  }, []);\n\n  // If no queue data yet, show loading state\n  if (!queue) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading queue status...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 22\n  }, this);\n\n  // Render queue depth and active worker count\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"queue-status\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Task Queue Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Queue Depth: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: queue.depth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Active Workers: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: queue.active_workers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Active Workers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: queue.active\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminQueueStatus, \"ztl0NzmTivhzv5ai692WsAckgCs=\");\n_c = AdminQueueStatus;\nexport default AdminQueueStatus;\nvar _c;\n$RefreshReg$(_c, \"AdminQueueStatus\");","map":{"version":3,"names":["React","useEffect","useState","API_URL","jsxDEV","_jsxDEV","AdminQueueStatus","_s","queue","setQueue","fetch","then","res","json","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","depth","active_workers","active","_c","$RefreshReg$"],"sources":["/Users/isaacbuz/Documents/Projects/GoldenSignalsAI/presentation/frontend/src/AdminQueueStatus.js"],"sourcesContent":["// AdminQueueStatus.js\n// Purpose: Displays the status of the background task queue for GoldenSignalsAI administrators. Fetches and presents queue depth and active worker count by polling the backend every 5 seconds. Designed for real-time monitoring of system throughput and worker health.\n\nimport React, { useEffect, useState } from 'react';\nimport API_URL from './config';\nimport \"./AdminPanel.css\";\n\nfunction AdminQueueStatus() {\n  // State to store queue status from backend\n  const [queue, setQueue] = useState(null);\n\n  // Poll queue status every 5 seconds for real-time updates\n  useEffect(() => {\n    fetch(`${API_URL}/api/admin/queue`)\n      .then((res) => res.json())\n      .then(setQueue);\n    const interval = setInterval(() => {\n      fetch(`${API_URL}/api/admin/queue`)\n        .then((res) => res.json())\n        .then(setQueue);\n    }, 5000); // update every 5 seconds\n\n    // Clean up interval on component unmount\n    return () => clearInterval(interval);\n  }, []);\n\n  // If no queue data yet, show loading state\n  if (!queue) return <p>Loading queue status...</p>;\n\n  // Render queue depth and active worker count\n  return (\n    <div className=\"queue-status\">\n      <h4>Task Queue Status</h4>\n      <div>Queue Depth: <b>{queue.depth}</b></div>\n      <div>Active Workers: <b>{queue.active_workers}</b></div>\n      <table>\n        <tbody>\n          <tr>\n            <td>Active Workers</td>\n            <td>{queue.active}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default AdminQueueStatus;\n"],"mappings":";;AAAA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,UAAU;AAC9B,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAD,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,GAAGP,OAAO,kBAAkB,CAAC,CAChCQ,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAACF,QAAQ,CAAC;IACjB,MAAMK,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCL,KAAK,CAAC,GAAGP,OAAO,kBAAkB,CAAC,CAChCQ,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAACF,QAAQ,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV;IACA,OAAO,MAAMO,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAI,CAACN,KAAK,EAAE,oBAAOH,OAAA;IAAAY,QAAA,EAAG;EAAuB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;;EAEjD;EACA,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,cAAc;IAAAL,QAAA,gBAC3BZ,OAAA;MAAAY,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BhB,OAAA;MAAAY,QAAA,GAAK,eAAa,eAAAZ,OAAA;QAAAY,QAAA,EAAIT,KAAK,CAACe;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5ChB,OAAA;MAAAY,QAAA,GAAK,kBAAgB,eAAAZ,OAAA;QAAAY,QAAA,EAAIT,KAAK,CAACgB;MAAc;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxDhB,OAAA;MAAAY,QAAA,eACEZ,OAAA;QAAAY,QAAA,eACEZ,OAAA;UAAAY,QAAA,gBACEZ,OAAA;YAAAY,QAAA,EAAI;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvBhB,OAAA;YAAAY,QAAA,EAAKT,KAAK,CAACiB;UAAM;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACd,EAAA,CAtCQD,gBAAgB;AAAAoB,EAAA,GAAhBpB,gBAAgB;AAwCzB,eAAeA,gBAAgB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}