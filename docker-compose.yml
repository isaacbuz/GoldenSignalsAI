version: '3.8'
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
      - kafka
  frontend:
    build:
      context: ./presentation/frontend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - backend
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/alerts.yml:/etc/prometheus/alerts.yml
    ports:
      - "9090:9090"
    # Prometheus config and alert rules are now in ./config/
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8050:8050"
    command: python -m monitoring.agent_dashboard
    depends_on:
      - backend
