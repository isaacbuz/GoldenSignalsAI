name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        pip install poetry
        poetry config virtualenvs.create false

    - name: Install dependencies
      run: |
        poetry install --no-interaction --no-root

    - name: Run tests
      run: |
        poetry run pytest tests/ \
          --cov=. \
          --cov-report=xml \
          --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.10

    - name: Install dependencies
      run: |
        pip install poetry
        poetry config virtualenvs.create false
        poetry install --no-interaction --no-root

    - name: Run linters
      run: |
        poetry run black --check .
        poetry run isort --check-only .
        poetry run flake8 .

  build:
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build Docker Image
      run: |
        docker build -t goldensignalsai .
        docker run goldensignalsai pytest tests/

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    - name: Deploy to Production
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
      run: |
        heroku container:login
        heroku container:push web -a $HEROKU_APP_NAME
        heroku container:release web -a $HEROKU_APP_NAME
